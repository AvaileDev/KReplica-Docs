{
  "user-profile": {
    "name": "Versioning & Mappers",
    "description": "This example showcases the end-to-end workflow for creating, using, and safely evolving versioned API models with KReplica.",
    "featureTourPartTitles": {
      "1": "The Core Workflow"
    },
    "featureTourSteps": [
      {
        "title": "1. Define Interface",
        "description": "Everything starts with a simple Kotlin interface. No boilerplate or complex base classes are required.",
        "file": "source",
        "part": 1
      },
      {
        "title": "2. Generate DTOs",
        "description": "KReplica generates powerful, variant-aware DTOs, including a sealed hierarchy that enables advanced, type-safe patterns.",
        "file": "UserAccountSchema.kt",
        "part": 1
      },
      {
        "title": "3. Ensure Exhaustive Handling",
        "description": "The generated sealed hierarchy enables exhaustive `when` expressions, forcing you to handle every version and variant at compile time. This eliminates entire classes of runtime errors as your API evolves.",
        "file": "WhenStatements.kt",
        "part": 1
      }
    ]
  }
}